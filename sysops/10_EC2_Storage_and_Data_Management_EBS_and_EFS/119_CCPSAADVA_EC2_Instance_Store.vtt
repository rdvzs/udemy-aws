WEBVTT

1
00:00:00.260 --> 00:00:03.270
<v Narrator>So we've seen a way to attach a network drive</v>

2
00:00:03.270 --> 00:00:04.838
onto our EC2 Instances

3
00:00:04.838 --> 00:00:07.440
but they have limited performance

4
00:00:07.440 --> 00:00:10.045
and I said with cause because it's a really good performance

5
00:00:10.045 --> 00:00:13.670
but sometimes you want something even higher performance

6
00:00:13.670 --> 00:00:16.290
and that is going to be a hardware disk

7
00:00:16.290 --> 00:00:18.329
attached onto you EC2 Instance.

8
00:00:18.329 --> 00:00:21.499
So the EC2 Instance is a virtual machine

9
00:00:21.499 --> 00:00:25.370
but it is obviously attached to a real hardware server.

10
00:00:25.370 --> 00:00:28.500
And some of these servers do have disk space

11
00:00:28.500 --> 00:00:30.750
that is attached directly you know,

12
00:00:30.750 --> 00:00:33.730
with a physical connection onto the server.

13
00:00:33.730 --> 00:00:36.970
And so a special type of EC2 Instance can leverage

14
00:00:36.970 --> 00:00:39.136
something called an EC2 Instance Store,

15
00:00:39.136 --> 00:00:41.095
which is the name of the hardware,

16
00:00:41.095 --> 00:00:44.603
the hard drive attached to the physical server.

17
00:00:44.603 --> 00:00:46.641
So what we do with EC2 Instance Store,

18
00:00:46.641 --> 00:00:49.510
we use them for better I/O performance.

19
00:00:49.510 --> 00:00:52.240
We also make sure that they have good through put

20
00:00:52.240 --> 00:00:53.850
and so on, so they're a great choice

21
00:00:53.850 --> 00:00:56.880
when you want to have extremely high disk performance.

22
00:00:56.880 --> 00:00:59.766
But the caveat is that if you stop

23
00:00:59.766 --> 00:01:02.800
or you terminate your EC2 Instance,

24
00:01:02.800 --> 00:01:04.550
that has an Instance Store,

25
00:01:04.550 --> 00:01:06.910
then the storage will be lost.

26
00:01:06.910 --> 00:01:09.149
And therefore it's called an ephemeral storage

27
00:01:09.149 --> 00:01:11.380
so that means that the EC2 Instance Store

28
00:01:11.380 --> 00:01:14.930
can not be used as a durable long term place

29
00:01:14.930 --> 00:01:16.430
to store your data.

30
00:01:16.430 --> 00:01:18.740
So what is a good use case for it then?

31
00:01:18.740 --> 00:01:20.580
Well if you have a buffer, a cache,

32
00:01:20.580 --> 00:01:23.621
you want to have scratch data or temporary content,

33
00:01:23.621 --> 00:01:26.870
this would be a great place to do these things

34
00:01:26.870 --> 00:01:28.110
but not for long term storage.

35
00:01:28.110 --> 00:01:30.070
For long term storage, EBS for example

36
00:01:30.070 --> 00:01:31.810
is a great use case.

37
00:01:31.810 --> 00:01:34.349
Finally, in case the on the line server

38
00:01:34.349 --> 00:01:37.517
of the EC2 Instance does fail,

39
00:01:37.517 --> 00:01:39.530
then you'll risk to have a dear loss

40
00:01:39.530 --> 00:01:41.950
because the hardware attached to the EC2 Instance

41
00:01:41.950 --> 00:01:43.340
will fail as well.

42
00:01:43.340 --> 00:01:46.322
So if you do decide to use an EC2 Instance Store,

43
00:01:46.322 --> 00:01:48.373
then it is your entire responsibility

44
00:01:48.373 --> 00:01:50.511
to make sure that you back it up

45
00:01:50.511 --> 00:01:54.015
and that you replicate it correctly based on your needs.

46
00:01:54.015 --> 00:01:55.880
So what I mean by better performance,

47
00:01:55.880 --> 00:01:58.400
this is just an example to illustrate it,

48
00:01:58.400 --> 00:01:59.233
don't need to know it.

49
00:01:59.233 --> 00:02:01.130
But if you look at for example,

50
00:02:01.130 --> 00:02:03.764
the Instance size of I3 dot something,

51
00:02:03.764 --> 00:02:07.110
there is an Instance Store attached

52
00:02:07.110 --> 00:02:09.070
to these kinds of instances

53
00:02:09.070 --> 00:02:10.990
and if you look at the Read IOPS

54
00:02:10.990 --> 00:02:11.823
and the Write IOPS

55
00:02:11.823 --> 00:02:13.770
which correspond to how many I/O operations

56
00:02:13.770 --> 00:02:15.120
we can do per second.

57
00:02:15.120 --> 00:02:17.980
Then you can see at some of these random Read IOPS

58
00:02:17.980 --> 00:02:21.575
and Write IOPS can reach 3.3 million or 1.4 million,

59
00:02:21.575 --> 00:02:24.590
for the most performant one.

60
00:02:24.590 --> 00:02:26.200
And to put this in comparison

61
00:02:26.200 --> 00:02:28.820
with an EBS volume of type BP2 for example,

62
00:02:28.820 --> 00:02:31.407
you can reach thirty two thousand IOPS.

63
00:02:31.407 --> 00:02:33.450
So this is a lot more.

64
00:02:33.450 --> 00:02:34.931
But again, it's just to illustrate my point

65
00:02:34.931 --> 00:02:37.960
from an exam perspective anytime you see very

66
00:02:37.960 --> 00:02:40.762
high performance hardware attached volume

67
00:02:40.762 --> 00:02:45.350
for your EC2 Instances, think local EC2 Instance Store.

68
00:02:45.350 --> 00:02:46.183
That's it.

69
00:02:46.183 --> 00:02:47.700
I will see you in the next lecture.

