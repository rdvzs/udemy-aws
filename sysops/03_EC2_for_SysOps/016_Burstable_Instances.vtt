WEBVTT

1
00:00:00.150 --> 00:00:01.440
<v Instructor>So, let's have a look now</v>

2
00:00:01.440 --> 00:00:03.460
at burstable type of instances in AWS,

3
00:00:03.460 --> 00:00:07.530
for example, T2 or T3, but just a T family overall.

4
00:00:07.530 --> 00:00:09.870
So, that means that when you have a T2,

5
00:00:09.870 --> 00:00:12.540
T3 type of instance, you are using it

6
00:00:12.540 --> 00:00:14.970
and the instance will have okay CPU performance.

7
00:00:14.970 --> 00:00:16.800
And then, when the machine needs to process

8
00:00:16.800 --> 00:00:18.270
something very, very unexpected,

9
00:00:18.270 --> 00:00:20.250
for example, that requires a lot of CPU

10
00:00:20.250 --> 00:00:22.020
for a spike in load, it can burst.

11
00:00:22.020 --> 00:00:24.120
That means that the CPU can become very good

12
00:00:24.120 --> 00:00:26.700
and can handle this spike for you.

13
00:00:26.700 --> 00:00:28.080
So then, when the machine bursts,

14
00:00:28.080 --> 00:00:31.140
it usually is what's called a burst credit.

15
00:00:31.140 --> 00:00:34.197
And as your EC2 instance has its lifecycle,

16
00:00:34.197 --> 00:00:36.360
it will accumulate burst credit.

17
00:00:36.360 --> 00:00:38.973
And then, when the CPU is intensely being used,

18
00:00:38.973 --> 00:00:41.250
then the burst credits will be used as well.

19
00:00:41.250 --> 00:00:42.569
So, if all credits are gone,

20
00:00:42.569 --> 00:00:45.450
the CPU becomes really, really bad, and that means

21
00:00:45.450 --> 00:00:47.190
that you're not using the right type of instance.

22
00:00:47.190 --> 00:00:49.830
And I will show you this in graphs right now.

23
00:00:49.830 --> 00:00:52.320
So, if the machine stops bursting though,

24
00:00:52.320 --> 00:00:54.660
the CPU credits are getting backed over time

25
00:00:54.660 --> 00:00:56.850
and you can reuse them whenever you need them.

26
00:00:56.850 --> 00:00:59.160
So, burstable instance can be amazing

27
00:00:59.160 --> 00:01:01.560
to handle unexpected type of traffic,

28
00:01:01.560 --> 00:01:03.090
and if they're handled correctly,

29
00:01:03.090 --> 00:01:05.340
it could be a really, really lifesaver

30
00:01:05.340 --> 00:01:07.080
a type of instance for you.

31
00:01:07.080 --> 00:01:09.510
But if you are having an instance

32
00:01:09.510 --> 00:01:10.813
that consistently runs low on credit,

33
00:01:10.813 --> 00:01:12.990
then you need to move to a different kind of instance,

34
00:01:12.990 --> 00:01:15.150
because maybe you're not using the T type

35
00:01:15.150 --> 00:01:16.890
of family correctly.

36
00:01:16.890 --> 00:01:19.620
So, if you have a look, this is from CloudWatch monitoring.

37
00:01:19.620 --> 00:01:24.620
As we can see, as soon as the CPU level will spike,

38
00:01:24.711 --> 00:01:28.560
then there will be a decrease in the CPU credit balance.

39
00:01:28.560 --> 00:01:31.200
As you can see here, there's a spike in usage of credits

40
00:01:31.200 --> 00:01:32.100
and that means that here,

41
00:01:32.100 --> 00:01:34.440
the CPU credit balance will go down.

42
00:01:34.440 --> 00:01:36.690
And then, once the spike stops,

43
00:01:36.690 --> 00:01:38.277
then credits are reaccumulated

44
00:01:38.277 --> 00:01:40.503
to go back to a different credit balance.

45
00:01:41.400 --> 00:01:43.020
So, if we look at the credits,

46
00:01:43.020 --> 00:01:44.250
different type of instances

47
00:01:44.250 --> 00:01:46.050
will earn credits at a different rate.

48
00:01:46.050 --> 00:01:48.300
And so, as we can see for a T2 micro,

49
00:01:48.300 --> 00:01:50.765
we earn one vCPU with a launch credit of 30,

50
00:01:50.765 --> 00:01:53.760
and then you earn six credits per hour.

51
00:01:53.760 --> 00:01:57.210
And the maximum amount of credits you can have is 144.

52
00:01:57.210 --> 00:01:59.850
And the baseline performance is 10%.

53
00:01:59.850 --> 00:02:02.880
Okay. So, what happens when the credits are exhausted?

54
00:02:02.880 --> 00:02:04.980
So, I did run a little experiment for you to see.

55
00:02:04.980 --> 00:02:06.777
So, I ran the CPU stress command

56
00:02:06.777 --> 00:02:10.260
to peak at 100% CPU utilization on a T2 micro.

57
00:02:10.260 --> 00:02:11.190
And then, we can see

58
00:02:11.190 --> 00:02:13.680
that after all the credits are exhausted,

59
00:02:13.680 --> 00:02:16.920
then the actual measured CP utilization will drop.

60
00:02:16.920 --> 00:02:18.960
So, let's have a look. This is again from CloudWatch.

61
00:02:18.960 --> 00:02:20.137
So, I did launch my instance,

62
00:02:20.137 --> 00:02:22.170
and then I ran the stress command,

63
00:02:22.170 --> 00:02:25.050
as you can see, the CPU utilization skyrocketed

64
00:02:25.050 --> 00:02:27.445
and went all the way to 100%.

65
00:02:27.445 --> 00:02:29.910
While it did so, on the right-hand side,

66
00:02:29.910 --> 00:02:31.740
we can look at the CPU credit balance.

67
00:02:31.740 --> 00:02:34.530
So, it started at 30, which is the number

68
00:02:34.530 --> 00:02:36.960
of CPU credits you get when you launch a T2 micro.

69
00:02:36.960 --> 00:02:38.610
And then, because the CPU utilization

70
00:02:38.610 --> 00:02:40.591
was skyrocketing at 100%,

71
00:02:40.591 --> 00:02:43.410
then the credit balance was being used.

72
00:02:43.410 --> 00:02:45.480
And as we go along in time,

73
00:02:45.480 --> 00:02:48.360
the CPU credit balance drops, drops, drops, drops, drops,

74
00:02:48.360 --> 00:02:50.978
which allows my utilization to still peak.

75
00:02:50.978 --> 00:02:55.140
But when the CPU credit balance reached the zero,

76
00:02:55.140 --> 00:02:58.080
so when we had no more credits, then as you can see,

77
00:02:58.080 --> 00:03:00.330
even though the stress command was still being run,

78
00:03:00.330 --> 00:03:01.320
the CPU utilization

79
00:03:01.320 --> 00:03:04.995
dropped all the way to 10%, which is the baseline.

80
00:03:04.995 --> 00:03:08.070
And so, as we can see now, there is a lower CPU utilization.

81
00:03:08.070 --> 00:03:11.430
So, when there is no more credit on your CPU,

82
00:03:11.430 --> 00:03:14.850
even though you are running your instance at full capacity,

83
00:03:14.850 --> 00:03:17.640
the measured CPU utilization will be really low

84
00:03:17.640 --> 00:03:19.200
and will not be at 100%,

85
00:03:19.200 --> 00:03:22.410
which is a behavior you should know going into the exam.

86
00:03:22.410 --> 00:03:24.600
So, how can we palliate that?

87
00:03:24.600 --> 00:03:26.520
So, we have T2 and T3 unlimited,

88
00:03:26.520 --> 00:03:28.860
which is to give you an unlimited burst credit balance.

89
00:03:28.860 --> 00:03:30.420
So, this time, you don't have a credit balance,

90
00:03:30.420 --> 00:03:32.370
you can just tap into it as much as you want.

91
00:03:32.370 --> 00:03:33.930
That means that you're going to pay extra money

92
00:03:33.930 --> 00:03:35.640
if you go over the credit balance,

93
00:03:35.640 --> 00:03:37.618
but you will not lose end performance.

94
00:03:37.618 --> 00:03:40.246
And in case you have a CPU usage

95
00:03:40.246 --> 00:03:43.350
that goes over the 24-hour baseline,

96
00:03:43.350 --> 00:03:45.420
then you're going to get additional pay

97
00:03:45.420 --> 00:03:47.550
for the number of vCPU per hour you're using.

98
00:03:47.550 --> 00:03:49.514
So, be careful if you have a CPU instance

99
00:03:49.514 --> 00:03:51.894
that really always is at 100%.

100
00:03:51.894 --> 00:03:54.450
You will not be shown that behavior

101
00:03:54.450 --> 00:03:56.100
and you will pay a lot of money.

102
00:03:56.100 --> 00:03:59.610
So, be careful and monitor the CPU health of your instances.

103
00:03:59.610 --> 00:04:01.440
So, this is what I wanted to show you in this graph.

104
00:04:01.440 --> 00:04:03.480
So, what we can see here

105
00:04:03.480 --> 00:04:06.687
is that the CPU utilization right here peaks at 100%

106
00:04:06.687 --> 00:04:09.900
and that we're using the CPU credit usage as well

107
00:04:09.900 --> 00:04:11.760
a lot in CloudWatch.

108
00:04:11.760 --> 00:04:14.190
And if we look at the CPU credit balance,

109
00:04:14.190 --> 00:04:15.120
we started at zero.

110
00:04:15.120 --> 00:04:16.590
This is the blue line right here,

111
00:04:16.590 --> 00:04:18.540
which means that first, we are tapping

112
00:04:18.540 --> 00:04:21.690
into this 24-hour period surplus credit balance.

113
00:04:21.690 --> 00:04:23.051
So, we are tapping into it.

114
00:04:23.051 --> 00:04:25.290
And then, when we reach 72,

115
00:04:25.290 --> 00:04:26.580
which is how many credits

116
00:04:26.580 --> 00:04:28.950
we can use in one hour for this type of instance,

117
00:04:28.950 --> 00:04:33.950
then what get charged in the CPU surplus credit charge,

118
00:04:34.170 --> 00:04:37.770
which is a feature of T3 unlimited or T2 unlimited,

119
00:04:37.770 --> 00:04:39.837
which is that extra CPU balance were given to you

120
00:04:39.837 --> 00:04:41.730
and you're paying for those,

121
00:04:41.730 --> 00:04:44.160
but it still allows your CPU utilization

122
00:04:44.160 --> 00:04:46.320
to remain stable at 100%

123
00:04:46.320 --> 00:04:47.988
and give you the performance you need.

124
00:04:47.988 --> 00:04:50.368
So, if I go and launch an instance

125
00:04:50.368 --> 00:04:53.490
and we choose an instance in the T family,

126
00:04:53.490 --> 00:04:54.960
for example, t2.micro,

127
00:04:54.960 --> 00:04:57.210
which is a burstable type of instance,

128
00:04:57.210 --> 00:04:59.760
then you scroll down and you find advanced details

129
00:04:59.760 --> 00:05:00.810
and you scroll down again

130
00:05:00.810 --> 00:05:03.262
and you're looking for credit specification.

131
00:05:03.262 --> 00:05:04.680
And here, we have the option

132
00:05:04.680 --> 00:05:07.182
to choose the unlimited mode if we wanted to,

133
00:05:07.182 --> 00:05:09.120
to have unlimited burst credit

134
00:05:09.120 --> 00:05:11.130
and additional charges may apply,

135
00:05:11.130 --> 00:05:13.997
or to use the standard mode to just have standard credits.

136
00:05:13.997 --> 00:05:15.840
And if you don't select anything,

137
00:05:15.840 --> 00:05:19.200
then you will go with a default based on the logic of AWS.

138
00:05:19.200 --> 00:05:21.720
And finally, if I look at my T2 micro right now

139
00:05:21.720 --> 00:05:25.320
and go into monitoring and have a look at the credits,

140
00:05:25.320 --> 00:05:28.890
so if I scroll down in here at the very bottom,

141
00:05:28.890 --> 00:05:30.810
I can look at CPU credit usage.

142
00:05:30.810 --> 00:05:33.973
So, how much CPU credits were being used every hour,

143
00:05:33.973 --> 00:05:35.970
as well as my CPU credit balance.

144
00:05:35.970 --> 00:05:39.225
And so, if I just view this in metrics,

145
00:05:39.225 --> 00:05:42.540
to give you a larger graph in CloudWatch metrics,

146
00:05:42.540 --> 00:05:46.440
as we can see, I started at about 30 credits, and over time,

147
00:05:46.440 --> 00:05:49.350
because I have not been using my EC2 instance a lot,

148
00:05:49.350 --> 00:05:51.150
I've been accumulating credits.

149
00:05:51.150 --> 00:05:54.900
And when I was using my CPU instance and my EC2 instance,

150
00:05:54.900 --> 00:05:57.819
then some CPU credits were being consumed here as well.

151
00:05:57.819 --> 00:05:59.940
So, that's it for this lecture.

152
00:05:59.940 --> 00:06:02.633
I hope you liked it and I will see you in the next lecture.

