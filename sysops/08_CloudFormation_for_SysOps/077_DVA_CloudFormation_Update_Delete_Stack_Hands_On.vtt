WEBVTT

1
00:00:00.360 --> 00:00:02.250
<v Instructor>So now that we have created the stack,</v>

2
00:00:02.250 --> 00:00:03.532
we want to update it.

3
00:00:03.532 --> 00:00:04.628
And the only way

4
00:00:04.628 --> 00:00:08.455
to update a CloudFormation stack if we click on update is

5
00:00:08.455 --> 00:00:10.643
to replace the current template.

6
00:00:10.643 --> 00:00:12.810
Or if you wanna say use the current template, is going

7
00:00:12.810 --> 00:00:15.777
to just use the same as it was, but you cannot modify it.

8
00:00:15.777 --> 00:00:19.290
So we want to replace the current template with a new one.

9
00:00:19.290 --> 00:00:21.947
And so for this, let's go into our code

10
00:00:21.947 --> 00:00:26.010
and let's go to one EC2 with SG-EIP-YAML.

11
00:00:26.010 --> 00:00:29.430
And this one is actually an update over the previous one.

12
00:00:29.430 --> 00:00:30.474
So we have created a new template

13
00:00:30.474 --> 00:00:32.520
and we've added a lot of things

14
00:00:32.520 --> 00:00:34.245
that we're going to learn about in this course.

15
00:00:34.245 --> 00:00:35.911
But we have a parameter.

16
00:00:35.911 --> 00:00:38.906
We have the resources of the EC2 instance, which has

17
00:00:38.906 --> 00:00:43.052
more parameters, so it has security groups attached to it.

18
00:00:43.052 --> 00:00:45.922
And so we are referencing security groups

19
00:00:45.922 --> 00:00:47.910
that are being created later on.

20
00:00:47.910 --> 00:00:49.999
So before that, we also have an elastic IP,

21
00:00:49.999 --> 00:00:52.842
which is attached to my EC2 instance,

22
00:00:52.842 --> 00:00:54.936
and then one security group here

23
00:00:54.936 --> 00:00:57.510
and a second security group here.

24
00:00:57.510 --> 00:01:00.810
So we will have a look at these in greater detail later on.

25
00:01:00.810 --> 00:01:02.550
So don't need to look at it too much,

26
00:01:02.550 --> 00:01:04.050
but you can start to have a look

27
00:01:04.050 --> 00:01:06.870
and see if you can read these transformation templates.

28
00:01:06.870 --> 00:01:08.498
The idea is that things are changing,

29
00:01:08.498 --> 00:01:10.966
so let's upload a template file

30
00:01:10.966 --> 00:01:15.120
and we're going to choose one with SG-EIP.YAML.

31
00:01:15.120 --> 00:01:16.152
So we click on next

32
00:01:16.152 --> 00:01:19.591
and we are prompted with a parameter being called

33
00:01:19.591 --> 00:01:21.602
security group description.

34
00:01:21.602 --> 00:01:24.236
This is coming straight from this, so we are going to have

35
00:01:24.236 --> 00:01:29.236
to enter, "This is a cool security group"

36
00:01:29.550 --> 00:01:31.110
and you can enter whatever you want here.

37
00:01:31.110 --> 00:01:33.930
I just wanna show you the effect of this in a second.

38
00:01:33.930 --> 00:01:35.280
Let's click on next.

39
00:01:35.280 --> 00:01:38.144
And we scroll down next

40
00:01:38.144 --> 00:01:41.340
and we have a look at the summary.

41
00:01:41.340 --> 00:01:43.149
So we're going to specify now stack details

42
00:01:43.149 --> 00:01:45.603
with a new security group description.

43
00:01:45.603 --> 00:01:50.603
And at the bottom we have access to a change set preview.

44
00:01:50.624 --> 00:01:53.841
So a change set represents a list of things that is going

45
00:01:53.841 --> 00:01:57.294
to change as part of your CloudFormation updates.

46
00:01:57.294 --> 00:02:01.650
And as we can see here, four things are going to happen.

47
00:02:01.650 --> 00:02:05.933
The first one is that it will be added, a elastic IP.

48
00:02:05.933 --> 00:02:09.300
It will be added an SSH security group

49
00:02:09.300 --> 00:02:12.060
of type security group, a server security group

50
00:02:12.060 --> 00:02:13.100
of type security group.

51
00:02:13.100 --> 00:02:16.152
And finally, my instance, which was my EC2 instance from

52
00:02:16.152 --> 00:02:21.120
before is going to be replaced, replacement true.

53
00:02:21.120 --> 00:02:23.239
That means that the previous one is going to be terminated

54
00:02:23.239 --> 00:02:27.150
and the new one will be created to replace it.

55
00:02:27.150 --> 00:02:30.030
Sometimes you will have replacement false, which means

56
00:02:30.030 --> 00:02:32.490
that the resource can have a change in place.

57
00:02:32.490 --> 00:02:34.163
And that is for CloudFormation to define

58
00:02:34.163 --> 00:02:38.760
and to say based on the changes you've operated.

59
00:02:38.760 --> 00:02:40.017
And of course if you're not happy with it, you can try

60
00:02:40.017 --> 00:02:42.264
to understand why there is a replacement

61
00:02:42.264 --> 00:02:46.530
and change your code and hopefully get the outcome you want.

62
00:02:46.530 --> 00:02:49.170
But here now we have replacement true.

63
00:02:49.170 --> 00:02:50.431
So let's submit this.

64
00:02:50.431 --> 00:02:52.689
And as you can see now in the same stack,

65
00:02:52.689 --> 00:02:55.326
we now have an update in progress.

66
00:02:55.326 --> 00:02:58.830
So we refresh and the first two things that are happening

67
00:02:58.830 --> 00:03:01.260
is that we have a server security group

68
00:03:01.260 --> 00:03:03.663
and an SSH security group being created.

69
00:03:04.560 --> 00:03:08.820
And then after this we have my EC2 instance that is going

70
00:03:08.820 --> 00:03:10.110
to be updated

71
00:03:10.110 --> 00:03:13.200
and it says the requested update requires the creation

72
00:03:13.200 --> 00:03:16.170
of a new physical resource, hence creating one.

73
00:03:16.170 --> 00:03:19.080
This is due to replacement true.

74
00:03:19.080 --> 00:03:20.355
And so what we can observe is that if you go

75
00:03:20.355 --> 00:03:24.653
to EC2 instances and refresh, so let's remove this filter.

76
00:03:24.653 --> 00:03:27.960
Now we have access to the previous instance

77
00:03:27.960 --> 00:03:30.810
and then this new instance that is being created.

78
00:03:30.810 --> 00:03:32.850
That's why it's in the standing state, which is going

79
00:03:32.850 --> 00:03:35.160
to replace the previous one.

80
00:03:35.160 --> 00:03:37.530
So now it is in the running states.

81
00:03:37.530 --> 00:03:40.157
So back into CloudFormation, I'm going to refresh this.

82
00:03:40.157 --> 00:03:43.410
As you can see the new resource has been created.

83
00:03:43.410 --> 00:03:46.650
Now we have the elastic IP being created.

84
00:03:46.650 --> 00:03:48.423
So create in progress.

85
00:03:49.350 --> 00:03:52.012
And if we have a look at on the left hand side,

86
00:03:52.012 --> 00:03:55.785
the elastic IP, we're going to find

87
00:03:55.785 --> 00:03:58.890
that this elastic IP that has been created.

88
00:03:58.890 --> 00:04:02.130
And if we have a look at the tags of this elastic IP,

89
00:04:02.130 --> 00:04:04.105
as you can see it has again been tagged.

90
00:04:04.105 --> 00:04:07.170
So it has a logical ID, a stack ID

91
00:04:07.170 --> 00:04:08.460
and a stack name in its stack.

92
00:04:08.460 --> 00:04:11.403
So all of this is done automatically by CloudFormation.

93
00:04:13.110 --> 00:04:14.020
And so if you refresh,

94
00:04:14.020 --> 00:04:17.860
and as you can see, this elastic IP is going to be attached

95
00:04:17.860 --> 00:04:19.830
to my EC2 instance,

96
00:04:19.830 --> 00:04:22.200
and the previous one is going to be deleted

97
00:04:22.200 --> 00:04:24.240
because it is a replacement.

98
00:04:24.240 --> 00:04:27.120
So back in here, let's refresh.

99
00:04:27.120 --> 00:04:29.250
As you can see, this one is shutting down

100
00:04:29.250 --> 00:04:32.310
and being terminated and the one that was created,

101
00:04:32.310 --> 00:04:36.733
if we have a look at the public IP, it is right here

102
00:04:36.733 --> 00:04:40.620
and it corresponds to this elastic IP address.

103
00:04:40.620 --> 00:04:42.779
As you can see, if we look at the summary of this,

104
00:04:42.779 --> 00:04:46.680
this elastic IP has an associated instance ID,

105
00:04:46.680 --> 00:04:50.520
which is the one that was created by CloudFormation.

106
00:04:50.520 --> 00:04:51.612
So this is extremely powerful.

107
00:04:51.612 --> 00:04:53.592
Of course, we can go to security

108
00:04:53.592 --> 00:04:57.214
and have a look that yes, indeed two security groups

109
00:04:57.214 --> 00:05:00.027
have been attached to my EC2 instance,

110
00:05:00.027 --> 00:05:02.250
and we can have a look at them both.

111
00:05:02.250 --> 00:05:05.220
So one and two in here.

112
00:05:05.220 --> 00:05:07.655
So this first one is the SSH security group

113
00:05:07.655 --> 00:05:10.893
and has an inbound rule on port 22.

114
00:05:11.820 --> 00:05:14.370
And if you have a look at the tags, well again,

115
00:05:14.370 --> 00:05:16.766
it has been tagged by CloudFormation as expected.

116
00:05:16.766 --> 00:05:21.216
And if we have a look at the second one, this server

117
00:05:21.216 --> 00:05:25.977
security group, then we have more rules, SSH, and HTP.

118
00:05:25.977 --> 00:05:27.776
And on top of it, if we look at the description

119
00:05:27.776 --> 00:05:31.680
of this group, it says "This is a cool security group."

120
00:05:31.680 --> 00:05:32.547
So the parameter that we put

121
00:05:32.547 --> 00:05:36.677
actually helped us write at runtime the description

122
00:05:36.677 --> 00:05:38.280
of this security group.

123
00:05:38.280 --> 00:05:39.962
And that's the whole power of parameters.

124
00:05:39.962 --> 00:05:43.950
So back into my CloudFormation stack, I can refresh,

125
00:05:43.950 --> 00:05:45.720
I'm at update complete.

126
00:05:45.720 --> 00:05:46.884
And if I have a look at my resources,

127
00:05:46.884 --> 00:05:48.770
we now have four resources

128
00:05:48.770 --> 00:05:52.560
that we just looked at under my CloudFormation stack.

129
00:05:52.560 --> 00:05:53.393
The parameter we set from

130
00:05:53.393 --> 00:05:56.730
before, which was "This is a cool security group,"

131
00:05:56.730 --> 00:05:59.955
got inserted as the security group description

132
00:05:59.955 --> 00:06:02.460
for this one security group.

133
00:06:02.460 --> 00:06:03.480
And we've seen the whole power

134
00:06:03.480 --> 00:06:05.430
of doing updates through CloudFormation.

135
00:06:05.430 --> 00:06:06.957
Again, nothing was done manually.

136
00:06:06.957 --> 00:06:10.890
The template was updated and uploaded.

137
00:06:10.890 --> 00:06:12.060
And then here we go.

138
00:06:12.060 --> 00:06:15.480
CloudFormation figured out how to get to the final states.

139
00:06:15.480 --> 00:06:20.480
Now to clean up CloudFormation, you could right click here

140
00:06:20.490 --> 00:06:21.613
and terminate your instance,

141
00:06:21.613 --> 00:06:23.056
but then it's going to be a problem

142
00:06:23.056 --> 00:06:25.857
because your security groups are still going to be here.

143
00:06:25.857 --> 00:06:28.865
Your elastic IP is still going to be here and so on.

144
00:06:28.865 --> 00:06:30.405
So how do we clean up?

145
00:06:30.405 --> 00:06:33.401
Well, actually from CloudFormation you can click on delete

146
00:06:33.401 --> 00:06:35.190
and to delete a stack.

147
00:06:35.190 --> 00:06:37.683
This will delete all the stack resources

148
00:06:37.683 --> 00:06:39.460
and this will clean up everything

149
00:06:39.460 --> 00:06:42.000
that was created by CloudFormation.

150
00:06:42.000 --> 00:06:43.530
So I'm going to do it right now.

151
00:06:43.530 --> 00:06:44.940
Now we have a delete in progress,

152
00:06:44.940 --> 00:06:46.436
and if you have a look at your events, again,

153
00:06:46.436 --> 00:06:49.110
my elastic IP is being deleted.

154
00:06:49.110 --> 00:06:54.021
Then the next thing being deleted is my EC2 instance.

155
00:06:54.021 --> 00:06:56.960
So if I refresh this now, it's shutting down.

156
00:06:56.960 --> 00:06:59.803
And then finally we will have our security groups.

157
00:06:59.803 --> 00:07:02.535
And the cool thing about it is that CloudFormation was able

158
00:07:02.535 --> 00:07:05.239
to determine on its own the order

159
00:07:05.239 --> 00:07:08.969
of which it should delete things, which is very handy.

160
00:07:08.969 --> 00:07:11.730
So from CloudFormation you'll see how to create, how

161
00:07:11.730 --> 00:07:15.556
to update, and how to delete all resources within a stack.

162
00:07:15.556 --> 00:07:17.039
And hopefully that is a good intro

163
00:07:17.039 --> 00:07:18.925
to the power of CloudFormation.

164
00:07:18.925 --> 00:07:20.229
So I hope you liked it,

165
00:07:20.229 --> 00:07:23.103
and I will see you in the next lecture.

