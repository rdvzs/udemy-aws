WEBVTT

1
00:00:00.260 --> 00:00:02.650
<v Instructor>So we're just going to practice with IPv6.</v>

2
00:00:02.650 --> 00:00:06.910
And so we have our VPC here and we have our demo VPC.

3
00:00:06.910 --> 00:00:08.550
And so to enable IPv6 report,

4
00:00:08.550 --> 00:00:10.980
we need to add an IPv6 CIDR range.

5
00:00:10.980 --> 00:00:12.890
So let's go right click on this.

6
00:00:12.890 --> 00:00:14.400
And then we edit the CIDRs.

7
00:00:14.400 --> 00:00:16.550
And then I'm going to add a new IPv6 CIDR range.

8
00:00:16.550 --> 00:00:19.280
So now we can either use an Amazon-provided CIDR block

9
00:00:19.280 --> 00:00:21.280
or a CIDR provided by me.

10
00:00:21.280 --> 00:00:23.193
So I will use one generated by AWS

11
00:00:24.136 --> 00:00:26.450
and then we'll have one that is advertised

12
00:00:26.450 --> 00:00:28.490
as a group of eu-central-1.

13
00:00:28.490 --> 00:00:30.483
So let's select the CIDR and here we go,

14
00:00:30.483 --> 00:00:33.083
it is associated and here is my IPv6 CIDR.

15
00:00:34.270 --> 00:00:36.568
So next, let me go to my subnets

16
00:00:36.568 --> 00:00:39.620
and I will take my public subnet A, action,

17
00:00:39.620 --> 00:00:42.710
and then I will edit the IPv6 CIDRs.

18
00:00:42.710 --> 00:00:43.550
So as you can see,

19
00:00:43.550 --> 00:00:46.550
I need to assign an IPv6 CIDR with my subnet.

20
00:00:46.550 --> 00:00:50.550
So I will just use 00 just to be easy and click on save.

21
00:00:50.550 --> 00:00:54.303
So here is an IPv6 CIDR with my subnets.

22
00:00:54.303 --> 00:00:56.750
And then I can edit these subnet settings

23
00:00:56.750 --> 00:00:59.913
to allow auto assign IPv6 address.

24
00:01:01.250 --> 00:01:02.083
So I'll just do for one subnet

25
00:01:02.083 --> 00:01:03.980
and I'll do it for all of them obviously,

26
00:01:03.980 --> 00:01:05.920
but you can assign IPv6 addresses

27
00:01:05.920 --> 00:01:08.550
for any of these subnets.

28
00:01:08.550 --> 00:01:11.020
So next, if I go to my EC2 instances,

29
00:01:11.020 --> 00:01:13.920
I can right click on this one, go to networking

30
00:01:13.920 --> 00:01:15.960
and then manage IP addresses.

31
00:01:15.960 --> 00:01:18.760
So currently the interface eth0

32
00:01:18.760 --> 00:01:20.660
does not have an IPv6 address

33
00:01:20.660 --> 00:01:23.030
but we can assign a new IPv6 address

34
00:01:23.030 --> 00:01:25.450
which is going to be auto assigned.

35
00:01:25.450 --> 00:01:28.550
And then I click on save, confirm.

36
00:01:28.550 --> 00:01:30.430
And if you look at my BastionHost now,

37
00:01:30.430 --> 00:01:32.500
it has an IPv6 address.

38
00:01:32.500 --> 00:01:35.720
And so if we had an IPv6 address on our machine

39
00:01:35.720 --> 00:01:39.670
and we edited the security group of this instance

40
00:01:39.670 --> 00:01:43.240
to allow not just 0.0.0/0 which is the IPv4 range

41
00:01:43.240 --> 00:01:47.180
but also we add the IPv6 range CIDR.

42
00:01:47.180 --> 00:01:50.670
So if we go into the security group right here

43
00:01:50.670 --> 00:01:53.800
and then edit the inbound rules, and then we add SSH

44
00:01:53.800 --> 00:01:57.860
but this time from anywhere IPv6.

45
00:01:57.860 --> 00:02:02.000
Then we can do an SSH into our BastionHost

46
00:02:02.000 --> 00:02:05.440
directly using the IPv6 address

47
00:02:05.440 --> 00:02:09.820
provided at our own computer, of course has an IPv6 address.

48
00:02:09.820 --> 00:02:12.630
And IPv6 addresses are not necessarily

49
00:02:13.710 --> 00:02:17.090
like common for your internet providers.

50
00:02:17.090 --> 00:02:19.690
So there is a website called Test-IPv6

51
00:02:19.690 --> 00:02:22.060
and it will run some tests.

52
00:02:22.060 --> 00:02:25.870
And then it turns out that's if you have an IPv6,

53
00:02:25.870 --> 00:02:27.180
it will appear right here.

54
00:02:27.180 --> 00:02:28.710
And so you have IPv6 address

55
00:02:28.710 --> 00:02:31.510
and you can access the EC2 instance.

56
00:02:31.510 --> 00:02:33.380
But if you don't have an IPv6,

57
00:02:33.380 --> 00:02:35.460
then don't worry, you cannot do anything about it.

58
00:02:35.460 --> 00:02:37.470
You just need to wait for your internet provider

59
00:02:37.470 --> 00:02:39.833
to be upgraded to the IPv6 scheme.

60
00:02:40.696 --> 00:02:42.310
So this is cool because now I have one.

61
00:02:42.310 --> 00:02:44.510
And so if I wanted to, I could connect EC2 instance

62
00:02:44.510 --> 00:02:47.180
using IPv6. So the one last thing I want to show you

63
00:02:47.180 --> 00:02:48.560
is around the route tables.

64
00:02:48.560 --> 00:02:51.560
So if we have a look at the public route table, for example,

65
00:02:51.560 --> 00:02:52.640
and look at the routes,

66
00:02:52.640 --> 00:02:55.240
as you can see, there has been a rule added

67
00:02:55.240 --> 00:02:57.690
into my route table which is saying that anything

68
00:02:57.690 --> 00:03:02.210
that is using this CIDR of IPv6 should be local.

69
00:03:02.210 --> 00:03:03.840
So that means that my EC2 instances,

70
00:03:03.840 --> 00:03:07.080
if they have IPv6 addresses can communicate with each other

71
00:03:07.080 --> 00:03:09.530
using their IPv6 address.

72
00:03:09.530 --> 00:03:11.270
And if in the CIDR,

73
00:03:11.270 --> 00:03:13.000
then all the traffic is going to remain local.

74
00:03:13.000 --> 00:03:15.493
It's not gonna go through the public internet.

75
00:03:16.614 --> 00:03:18.270
So that's it for IPv6.

76
00:03:18.270 --> 00:03:19.500
I hope you liked it.

77
00:03:19.500 --> 00:03:22.530
And also one last thing to notice, excuse me,

78
00:03:22.530 --> 00:03:24.440
is that in your subnet, as we can see,

79
00:03:24.440 --> 00:03:27.890
there are 248 IPv4 addresses left.

80
00:03:27.890 --> 00:03:29.940
So even though I have many, many IPv6

81
00:03:29.940 --> 00:03:31.930
available in my subnet,

82
00:03:31.930 --> 00:03:35.580
if I go and use all the IPv4 addresses in my subnet,

83
00:03:35.580 --> 00:03:38.020
then I would need to assign a new CIDR block to my subnet

84
00:03:38.020 --> 00:03:40.730
to be able to keep on creating EC2 instances within it

85
00:03:40.730 --> 00:03:42.130
because each EC2 instance

86
00:03:42.130 --> 00:03:45.350
will no matter what have an IPv4 address.

87
00:03:45.350 --> 00:03:46.350
So now that's it.

88
00:03:46.350 --> 00:03:47.183
I hope you liked it.

89
00:03:47.183 --> 00:03:49.010
And I will see you in the next lecture.

