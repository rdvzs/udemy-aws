WEBVTT

1
00:00:00.361 --> 00:00:01.380
<v ->(Instructor) So a quick lecture</v>

2
00:00:01.380 --> 00:00:03.510
to understand rules as a whole.

3
00:00:03.510 --> 00:00:07.020
So rules are set up on your application load balancer

4
00:00:07.020 --> 00:00:08.710
and you can have many rules or one rule too,

5
00:00:08.710 --> 00:00:11.220
and the last rule is called the default rule

6
00:00:11.220 --> 00:00:14.830
and each rule will have a specific target. Okay?

7
00:00:14.830 --> 00:00:17.780
Now, the rules are going to be processed in order. Okay?

8
00:00:17.780 --> 00:00:21.810
The default rule is going to be the last one to be processed

9
00:00:21.810 --> 00:00:23.900
and each rule supports different actions.

10
00:00:23.900 --> 00:00:27.400
For example, it can forward to a specific target group,

11
00:00:27.400 --> 00:00:30.540
it can redirect to a specific other URL,

12
00:00:30.540 --> 00:00:33.340
or it can send a fixed response back.

13
00:00:33.340 --> 00:00:35.340
Rules can have conditions in terms of which rule is

14
00:00:35.340 --> 00:00:37.440
going to be hit first.

15
00:00:37.440 --> 00:00:41.223
So, it could be having a rule on the host header. Okay?

16
00:00:41.223 --> 00:00:43.240
This is part of the client request.

17
00:00:43.240 --> 00:00:47.230
It could be an HTTP request method to see if the request is

18
00:00:47.230 --> 00:00:49.060
a GET or a POST, or a PUT.

19
00:00:49.060 --> 00:00:51.780
The path pattern, so where the request is sent to,

20
00:00:51.780 --> 00:00:54.960
is it slash my app 1 or slash my app 2.

21
00:00:54.960 --> 00:00:58.690
Source IP, so what, where's the request coming from.

22
00:00:58.690 --> 00:01:01.230
And a specific HTTP header in general,

23
00:01:01.230 --> 00:01:04.050
or the query string parameters as part of the request.

24
00:01:04.050 --> 00:01:06.770
So this really allows you to create some complex routing to

25
00:01:06.770 --> 00:01:10.092
different target groups based on certain conditions

26
00:01:10.092 --> 00:01:12.350
on the originating request.

27
00:01:12.350 --> 00:01:15.600
Another thing you should know is that for a single rule,

28
00:01:15.600 --> 00:01:17.910
as part of your ALB, you could have

29
00:01:17.910 --> 00:01:20.880
multiple target groups as a target.

30
00:01:20.880 --> 00:01:23.580
And the idea is that you can specify weights for each

31
00:01:23.580 --> 00:01:25.480
target group within a single rule.

32
00:01:25.480 --> 00:01:29.110
So the idea behind this is that you want to be able to

33
00:01:29.110 --> 00:01:31.530
evolve your backend services, okay,

34
00:01:31.530 --> 00:01:34.060
from one target group to another, and to update them.

35
00:01:34.060 --> 00:01:36.850
And so you want to have version one in one target group

36
00:01:36.850 --> 00:01:38.820
and version two in another target group.

37
00:01:38.820 --> 00:01:40.110
And you want to evaluate whether or not

38
00:01:40.110 --> 00:01:41.430
version two make sense.

39
00:01:41.430 --> 00:01:44.000
This is also called a blue green deployment.

40
00:01:44.000 --> 00:01:45.160
So thanks to this weighting,

41
00:01:45.160 --> 00:01:49.280
you can control how much traffic goes from your ALB to

42
00:01:49.280 --> 00:01:51.620
a specific target group as part of a rule.

43
00:01:51.620 --> 00:01:52.860
So let's have a look at an example.

44
00:01:52.860 --> 00:01:54.970
So let's say that we have our users,

45
00:01:54.970 --> 00:01:58.110
they talked to the ALB and the ALB has been wired to talk to

46
00:01:58.110 --> 00:02:00.250
target group one historically. Okay.

47
00:02:00.250 --> 00:02:01.630
Which is your blue group,

48
00:02:01.630 --> 00:02:03.400
but now you're going to add a target group two,

49
00:02:03.400 --> 00:02:05.650
which is a new version of your application.

50
00:02:05.650 --> 00:02:08.280
And you will set up weights in your rule.

51
00:02:08.280 --> 00:02:10.730
You have a weight of eight, for target group one

52
00:02:10.730 --> 00:02:13.690
and a weight of two for target group two.

53
00:02:13.690 --> 00:02:15.560
That means that now for a single rule,

54
00:02:15.560 --> 00:02:19.050
the ALB will send 80% of the traffic to your first group and

55
00:02:19.050 --> 00:02:21.130
20% of the traffic to the second group,

56
00:02:21.130 --> 00:02:24.190
which would allow you to do some monitoring on your target

57
00:02:24.190 --> 00:02:27.810
groups and to see whether or not they are receiving the

58
00:02:27.810 --> 00:02:28.643
traffic correctly,

59
00:02:28.643 --> 00:02:31.480
whether or not the metrics are good, and whether or not your

60
00:02:31.480 --> 00:02:34.690
application version is behaving as expected. Okay?

61
00:02:34.690 --> 00:02:36.450
So this is a cool new feature as well.

62
00:02:36.450 --> 00:02:37.680
So that's it for this lecture.

63
00:02:37.680 --> 00:02:38.520
I hope you liked it.

64
00:02:38.520 --> 00:02:40.470
And I will see you in the next lecture.

