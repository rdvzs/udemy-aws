WEBVTT

1
00:00:02.640 --> 00:00:05.280
<v Lecturer>Okay, so let's go ahead and practice using</v>

2
00:00:05.280 --> 00:00:06.720
Certificate Manager.

3
00:00:06.720 --> 00:00:09.030
So I'm going to type, "Certificate Manager"

4
00:00:09.030 --> 00:00:11.100
And open the service.

5
00:00:11.100 --> 00:00:14.460
So here we're able to request a certificate,

6
00:00:14.460 --> 00:00:17.790
and we're going to request a public certificate.

7
00:00:17.790 --> 00:00:18.870
Click on Next.

8
00:00:18.870 --> 00:00:21.390
We need to type now the fully qualified domain name.

9
00:00:21.390 --> 00:00:26.390
So it's going to be, "ACMdemo.Stephantheteacher.com."

10
00:00:26.550 --> 00:00:29.580
And this is because I currently own Stephantheteacher.com.

11
00:00:29.580 --> 00:00:32.490
And this is a domain that has been registered on my AWS

12
00:00:32.490 --> 00:00:35.340
account and it is managed by Route 53.

13
00:00:35.340 --> 00:00:38.130
So for validation method, I will use DNS validation

14
00:00:38.130 --> 00:00:39.180
because this is very easy.

15
00:00:39.180 --> 00:00:43.890
There is a direct integration between ACM and Route 53.

16
00:00:43.890 --> 00:00:46.320
For the key algorithm, I'll leave it as the default

17
00:00:46.320 --> 00:00:48.180
and I click on request.

18
00:00:48.180 --> 00:00:50.400
So now the request is pending the validation,

19
00:00:50.400 --> 00:00:52.740
which is a DNS validation.

20
00:00:52.740 --> 00:00:56.070
And so I scroll up, and here on the domains you see

21
00:00:56.070 --> 00:00:57.930
that there's a pending validation

22
00:00:57.930 --> 00:01:00.480
and there is a record that needs to be created

23
00:01:00.480 --> 00:01:02.820
for this value and this name.

24
00:01:02.820 --> 00:01:04.110
So I can just click here

25
00:01:04.110 --> 00:01:07.860
and click on Create Record in Amazon Route 53.

26
00:01:07.860 --> 00:01:09.540
Let's click on Create Records.

27
00:01:09.540 --> 00:01:12.000
And now that these records have been created

28
00:01:12.000 --> 00:01:16.050
in Amazon Route 53 for me, this validation will take

29
00:01:16.050 --> 00:01:17.970
a little bit of time, but it will happen.

30
00:01:17.970 --> 00:01:21.720
So let me pause the video until AWS is able to verify

31
00:01:21.720 --> 00:01:23.430
that I still own this domain

32
00:01:23.430 --> 00:01:26.580
and that the records have been inserted in route 53.

33
00:01:26.580 --> 00:01:28.830
So my certificate has now been issued.

34
00:01:28.830 --> 00:01:29.663
This is success.

35
00:01:29.663 --> 00:01:31.620
And so we need to start using it.

36
00:01:31.620 --> 00:01:34.200
So for this, let's go into Elastic Beanstalk,

37
00:01:34.200 --> 00:01:36.480
'cause this is a very easy way for us to start environment

38
00:01:36.480 --> 00:01:38.700
and to load SSL certificates.

39
00:01:38.700 --> 00:01:40.620
So let's create an application.

40
00:01:40.620 --> 00:01:42.990
It's going to be a web server environment,

41
00:01:42.990 --> 00:01:46.197
and I'll call this one, "Demo TLS certificates."

42
00:01:47.880 --> 00:01:50.010
Then next we're going to scroll down,

43
00:01:50.010 --> 00:01:51.900
and it's going to be a managed platform.

44
00:01:51.900 --> 00:01:55.020
It's going to be no JS, and we leave everything else

45
00:01:55.020 --> 00:01:55.853
as default.

46
00:01:55.853 --> 00:01:58.200
We'll leave the sample application,

47
00:01:58.200 --> 00:02:00.510
but here we're going to choose high availability.

48
00:02:00.510 --> 00:02:02.730
And actually we're going to configure it

49
00:02:02.730 --> 00:02:04.830
with a custom configuration.

50
00:02:04.830 --> 00:02:06.033
So we click on Next.

51
00:02:07.950 --> 00:02:12.950
We take a random QC2 key pair, we click on Next.

52
00:02:16.290 --> 00:02:19.410
We don't touch anything here for the database.

53
00:02:19.410 --> 00:02:20.643
We click on Next.

54
00:02:24.480 --> 00:02:26.820
The route volume, we don't touch anything.

55
00:02:26.820 --> 00:02:31.113
We don't touch anything for the security groups for now.

56
00:02:32.040 --> 00:02:35.850
We scroll down, the load balancer, we don't touch anything.

57
00:02:35.850 --> 00:02:37.620
So far we're good.

58
00:02:37.620 --> 00:02:40.290
And then the load balancer type is going to be

59
00:02:40.290 --> 00:02:42.000
an application load balancer.

60
00:02:42.000 --> 00:02:43.800
So this is the important part.

61
00:02:43.800 --> 00:02:46.650
We're going to use a dedicated load balancer,

62
00:02:46.650 --> 00:02:48.780
and we're going to add a listener.

63
00:02:48.780 --> 00:02:50.820
And the port is going to be 443.

64
00:02:50.820 --> 00:02:54.120
And the protocol is going to be HTTPS.

65
00:02:54.120 --> 00:02:57.540
As you can see, now we need to choose an SSL certificate,

66
00:02:57.540 --> 00:02:59.700
and this is the one we have just created now.

67
00:02:59.700 --> 00:03:04.260
So next we need to choose a policy for our TLS.

68
00:03:04.260 --> 00:03:07.230
So really you can choose whatever policy you want in here.

69
00:03:07.230 --> 00:03:08.880
For example, the first one,

70
00:03:08.880 --> 00:03:12.600
and this is defining how strong you want your HTTPS security

71
00:03:12.600 --> 00:03:15.450
to be, but we'll just save it.

72
00:03:15.450 --> 00:03:19.260
And now we have a listener that is going to be compatible

73
00:03:19.260 --> 00:03:22.740
on our load balancer, and it's on port 443.

74
00:03:22.740 --> 00:03:24.150
So this is perfect.

75
00:03:24.150 --> 00:03:27.510
We may have to change some things later on

76
00:03:27.510 --> 00:03:30.300
regarding security groups, but for now we're good.

77
00:03:30.300 --> 00:03:31.383
Let's click on Next.

78
00:03:34.920 --> 00:03:36.660
And we don't need anything here,

79
00:03:36.660 --> 00:03:38.410
so I'm just going to click on Next.

80
00:03:42.180 --> 00:03:43.530
And review everything.

81
00:03:43.530 --> 00:03:45.330
And let's submit.

82
00:03:45.330 --> 00:03:47.100
So now what's happening is that Beanstalk

83
00:03:47.100 --> 00:03:49.980
is going to launch our environment with a load balancer,

84
00:03:49.980 --> 00:03:52.680
an auto scaling group, and EC2 instances.

85
00:03:52.680 --> 00:03:57.680
And we have created a 443 listener on our load balancer.

86
00:03:58.140 --> 00:04:01.500
And we have loaded our TLS or SSL certificate

87
00:04:01.500 --> 00:04:03.300
directly under the balancer.

88
00:04:03.300 --> 00:04:04.980
So let's wait for the environment

89
00:04:04.980 --> 00:04:06.990
to be launched and we'll get back.

90
00:04:06.990 --> 00:04:09.810
Okay, so my environment has been successfully launched,

91
00:04:09.810 --> 00:04:11.460
so I can click on this domain.

92
00:04:11.460 --> 00:04:15.420
As you can see right now, I access using the Beanstalk URL,

93
00:04:15.420 --> 00:04:18.150
but we want to access using our ACM demo URL.

94
00:04:18.150 --> 00:04:22.500
So first of all, we need to create a CNAME in Route 53.

95
00:04:22.500 --> 00:04:25.560
So for this, let's go into Route 53.

96
00:04:25.560 --> 00:04:28.290
We, under the hosted zone, look at our one,

97
00:04:28.290 --> 00:04:29.970
so stephantheteacher.com.

98
00:04:29.970 --> 00:04:32.100
And then I'm going to create a record,

99
00:04:32.100 --> 00:04:36.210
and it's going to be ACM demo, it's of type CNAME

100
00:04:36.210 --> 00:04:39.390
because it's a domain to another domain,

101
00:04:39.390 --> 00:04:43.410
and we paste the value, but without the HTP.

102
00:04:43.410 --> 00:04:45.360
So here now we're saying if someone goes to

103
00:04:45.360 --> 00:04:49.350
ACMdemo.stephantheteacher.com then actually go to this URL

104
00:04:49.350 --> 00:04:50.310
behind the scene.

105
00:04:50.310 --> 00:04:52.743
Okay, so let's create this record.

106
00:04:53.820 --> 00:04:55.203
And it has been created.

107
00:04:56.730 --> 00:04:58.380
And now let's test it out.

108
00:04:58.380 --> 00:05:01.203
So we're going to paste this here,

109
00:05:02.100 --> 00:05:04.950
and we're gonna go to the URL.

110
00:05:04.950 --> 00:05:07.950
We need to wait a little bit maybe for the domain name

111
00:05:07.950 --> 00:05:09.540
to be propagated.

112
00:05:09.540 --> 00:05:12.390
And now just refreshed and I'm able to access my page

113
00:05:12.390 --> 00:05:13.223
using my URL.

114
00:05:13.223 --> 00:05:15.930
So this was just a DNS propagation issue.

115
00:05:15.930 --> 00:05:18.870
Okay, so we're good, we are with this URL,

116
00:05:18.870 --> 00:05:20.760
but as you can see, there is no little lock.

117
00:05:20.760 --> 00:05:25.760
So let's add, "https://" To see if we can access it

118
00:05:26.100 --> 00:05:26.940
using HTTPS.

119
00:05:26.940 --> 00:05:28.080
And yes, we can.

120
00:05:28.080 --> 00:05:30.630
As you can see now, the lock saying that the connection

121
00:05:30.630 --> 00:05:33.450
is secure, it's verified by Amazon,

122
00:05:33.450 --> 00:05:37.500
and we can get more information around our certificates

123
00:05:37.500 --> 00:05:40.710
by just using Firefox or Chrome or whatever you want.

124
00:05:40.710 --> 00:05:42.540
You can view the certificates.

125
00:05:42.540 --> 00:05:44.010
And this gives you a lot of information

126
00:05:44.010 --> 00:05:47.580
around the certificate that we were just issued by ACM.

127
00:05:47.580 --> 00:05:49.800
So actually we didn't need to do any changes

128
00:05:49.800 --> 00:05:52.650
to security groups, which was great.

129
00:05:52.650 --> 00:05:55.680
So how do we also verify on the side of AWS

130
00:05:55.680 --> 00:05:58.170
that everything is loaded correctly besides this?

131
00:05:58.170 --> 00:06:00.120
Because all of it is working.

132
00:06:00.120 --> 00:06:03.003
Well, let's go into, for example, the EC2 console.

133
00:06:05.640 --> 00:06:08.703
And then let's have a look at our load balancers.

134
00:06:09.570 --> 00:06:12.300
We find our load balancer right here,

135
00:06:12.300 --> 00:06:15.090
and we look at the listeners and rules.

136
00:06:15.090 --> 00:06:19.770
And we can see here we have a rule for HTPS 443.

137
00:06:19.770 --> 00:06:21.450
And if you click on it, we can see

138
00:06:21.450 --> 00:06:23.880
that there is a default SSL TLS certificate

139
00:06:23.880 --> 00:06:26.460
that has been loaded directly from ACM.

140
00:06:26.460 --> 00:06:27.630
From ACM, yes.

141
00:06:27.630 --> 00:06:30.750
And if you wanted to, you could change the default

142
00:06:30.750 --> 00:06:33.420
or you can add more certificates directly from this UI

143
00:06:33.420 --> 00:06:34.350
as well.

144
00:06:34.350 --> 00:06:37.029
But this is good, we've seen the integration between ACM

145
00:06:37.029 --> 00:06:40.110
and Elastic Beanstalk and your load balancers.

146
00:06:40.110 --> 00:06:42.300
So now to just clean things up and make sure you don't have

147
00:06:42.300 --> 00:06:45.990
any ongoing cost, please go to your environment,

148
00:06:45.990 --> 00:06:50.220
this one, and then, or your application, even easier.

149
00:06:50.220 --> 00:06:53.310
And then you do Action, and then Delete Application,

150
00:06:53.310 --> 00:06:57.187
and you just type the entire name of the application,

151
00:06:57.187 --> 00:06:58.797
"Demo TLS certificates."

152
00:06:59.640 --> 00:07:00.510
And you're done.

153
00:07:00.510 --> 00:07:02.460
So that's it for this lecture. I hope you liked it,

154
00:07:02.460 --> 00:07:04.473
and I will see you in the next lecture.

