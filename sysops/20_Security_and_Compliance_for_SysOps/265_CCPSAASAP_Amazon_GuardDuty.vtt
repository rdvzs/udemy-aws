WEBVTT

1
00:00:00.000 --> 00:00:02.610
<v Narrator>So now let's talk about Amazon GuardDuty.</v>

2
00:00:02.610 --> 00:00:05.940
GuardDuty helps you do intelligent threat discovery

3
00:00:05.940 --> 00:00:08.520
to protect your AWS accounts.

4
00:00:08.520 --> 00:00:09.600
How does it do it?

5
00:00:09.600 --> 00:00:12.570
Well, it has machine learning algorithm, performs anomaly

6
00:00:12.570 --> 00:00:16.410
detection and uses third party data to find these threats.

7
00:00:16.410 --> 00:00:18.210
So to enable it, it's just one click.

8
00:00:18.210 --> 00:00:19.800
Then you have a 30 days trial.

9
00:00:19.800 --> 00:00:21.990
You don't need to install any software.

10
00:00:21.990 --> 00:00:24.540
So GuardDuty is going to look at a lot of input data,

11
00:00:24.540 --> 00:00:26.340
such as your CloudTrail event logs

12
00:00:26.340 --> 00:00:28.500
to look for unusual API calls

13
00:00:28.500 --> 00:00:30.180
or unauthorized deployments.

14
00:00:30.180 --> 00:00:32.460
It's going to look at your management events

15
00:00:32.460 --> 00:00:33.990
and your data events.

16
00:00:33.990 --> 00:00:36.270
So for example, on the management side,

17
00:00:36.270 --> 00:00:39.000
the create VPC Subnet event and so on,

18
00:00:39.000 --> 00:00:41.010
whereas on the S3 data events

19
00:00:41.010 --> 00:00:43.890
for example, get object, list objects, delete objects

20
00:00:43.890 --> 00:00:45.030
and so on.

21
00:00:45.030 --> 00:00:46.685
And then for VPC flow logs, it's going to look

22
00:00:46.685 --> 00:00:48.960
at unusual internet traffic.

23
00:00:48.960 --> 00:00:52.590
It's going to look at unusual IP addresses.

24
00:00:52.590 --> 00:00:56.580
DNS logs to look at EC2 instances, sending encoded data

25
00:00:56.580 --> 00:01:00.090
within DNS queries, which would mean they're compromised

26
00:01:00.090 --> 00:01:03.120
and optional features to allow you to analyze, for example,

27
00:01:03.120 --> 00:01:06.090
other input data sources such as your EKS audit logs,

28
00:01:06.090 --> 00:01:10.650
your RDS and Aurora login events, your EBS, your Lambda

29
00:01:10.650 --> 00:01:13.560
and your S3 data events.

30
00:01:13.560 --> 00:01:16.620
So we can also set up EventBridge rules to

31
00:01:16.620 --> 00:01:19.530
be notified automatically in case you have findings.

32
00:01:19.530 --> 00:01:21.780
And then these rules can target whatever EventBridge

33
00:01:21.780 --> 00:01:25.803
can target, such as AWS, Lambda, or SNS topics.

34
00:01:27.034 --> 00:01:28.470
Also, this can come up in the exam.

35
00:01:28.470 --> 00:01:31.350
GuardDuty is a very good tool to protect you

36
00:01:31.350 --> 00:01:33.210
against cryptocurrency attacks

37
00:01:33.210 --> 00:01:35.190
because there is a dedicated finding for it.

38
00:01:35.190 --> 00:01:37.860
So it knows how to analyze all these input data

39
00:01:37.860 --> 00:01:41.070
and find that there is a cryptocurrency attack.

40
00:01:41.070 --> 00:01:43.110
So to summarize, within GuardDuty,

41
00:01:43.110 --> 00:01:45.000
we have several input data.

42
00:01:45.000 --> 00:01:46.530
We have the VPC flow logs,

43
00:01:46.530 --> 00:01:49.080
the CloudTrail logs, and the DNS logs

44
00:01:49.080 --> 00:01:51.300
that will be, no matter what, into GuardDuty

45
00:01:51.300 --> 00:01:53.760
as well as some optional features you can enable,

46
00:01:53.760 --> 00:01:55.830
such as your S3 logs, your EBS volumes,

47
00:01:55.830 --> 00:01:59.640
your Lambda network activity, RDS and Aurora login activity

48
00:01:59.640 --> 00:02:02.760
and your EKS logs and runtime monitoring as well

49
00:02:02.760 --> 00:02:05.460
as most likely, more features over time

50
00:02:05.460 --> 00:02:06.660
that I will not put here

51
00:02:06.660 --> 00:02:09.180
because you get the idea of optional features.

52
00:02:09.180 --> 00:02:11.190
And so from all these things,

53
00:02:11.190 --> 00:02:13.230
then GuardDuty can generate findings

54
00:02:13.230 --> 00:02:15.300
and if these findings are detected,

55
00:02:15.300 --> 00:02:18.750
an event is created in Amazon EventBridge.

56
00:02:18.750 --> 00:02:20.850
And therefore from EventBridge, thanks to rules,

57
00:02:20.850 --> 00:02:22.500
we can trigger automations, for example,

58
00:02:22.500 --> 00:02:23.850
using Lambda functions

59
00:02:23.850 --> 00:02:27.570
or send notifications, for example, using SNS.

60
00:02:27.570 --> 00:02:28.650
So that's it for this lecture.

61
00:02:28.650 --> 00:02:31.893
I hope you liked it and I will see you in the next lecture.

