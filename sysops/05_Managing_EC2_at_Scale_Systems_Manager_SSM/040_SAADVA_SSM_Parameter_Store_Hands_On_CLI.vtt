WEBVTT

1
00:00:00.450 --> 00:00:02.340
<v Stephan>Okay, so let's go ahead and practice</v>

2
00:00:02.340 --> 00:00:03.840
using the Parameter Store.

3
00:00:03.840 --> 00:00:05.160
So the best way to do it is

4
00:00:05.160 --> 00:00:07.470
to type Parameter Store in the search bar,

5
00:00:07.470 --> 00:00:08.520
and you can click here.

6
00:00:08.520 --> 00:00:09.960
It's a Systems Manager feature.

7
00:00:09.960 --> 00:00:12.960
So if you click on Parameter Store, on the left hand side,

8
00:00:12.960 --> 00:00:14.970
you will see that under Systems Manager,

9
00:00:14.970 --> 00:00:17.880
you have, under Application Tools, the Parameter Store,

10
00:00:17.880 --> 00:00:20.040
and what we can do here is create a new parameter.

11
00:00:20.040 --> 00:00:21.780
We specify types and values,

12
00:00:21.780 --> 00:00:23.040
and then we can reference the parameters

13
00:00:23.040 --> 00:00:24.840
in the comments or the code.

14
00:00:24.840 --> 00:00:27.300
So let's go ahead and practice using this service.

15
00:00:27.300 --> 00:00:29.100
So I first create a parameter

16
00:00:29.100 --> 00:00:31.080
and I need to enter a name for it.

17
00:00:31.080 --> 00:00:32.820
So the name is whatever you want.

18
00:00:32.820 --> 00:00:34.740
You don't have to follow my direction,

19
00:00:34.740 --> 00:00:36.450
but I like to name it like this

20
00:00:36.450 --> 00:00:40.530
so /my-app/dev/db-url,

21
00:00:40.530 --> 00:00:43.650
and this is going to allow me, with these four slashes

22
00:00:43.650 --> 00:00:45.180
to organize them into a hierarchy.

23
00:00:45.180 --> 00:00:47.730
So this is my app, this is the Dev Environment,

24
00:00:47.730 --> 00:00:49.170
and this is the name of my parameter

25
00:00:49.170 --> 00:00:51.240
within the Dev Environment.

26
00:00:51.240 --> 00:00:56.240
So here, I say DB Url for the Dev Environment.

27
00:00:56.490 --> 00:01:00.420
That's perfect, and then Tier, we have two options.

28
00:01:00.420 --> 00:01:02.460
We have Standard and Advanced.

29
00:01:02.460 --> 00:01:03.930
So we are going to use a Standard tier.

30
00:01:03.930 --> 00:01:07.230
We can store up to 10,000 standard parameters.

31
00:01:07.230 --> 00:01:09.720
They are four kilobytes in value maximum,

32
00:01:09.720 --> 00:01:11.190
and we can't share that with other accounts,

33
00:01:11.190 --> 00:01:14.760
but the Advanced parameters, you can have 100,000 of them,

34
00:01:14.760 --> 00:01:15.750
they can be eight kilobytes

35
00:01:15.750 --> 00:01:17.963
and you can share them with your other accounts.

36
00:01:19.230 --> 00:01:21.780
So next we're going to choose the type,

37
00:01:21.780 --> 00:01:25.170
and the type could be String, StringList, or SecureString.

38
00:01:25.170 --> 00:01:27.720
So here we're going to use String,

39
00:01:27.720 --> 00:01:30.000
but later we'll be using SecureString,

40
00:01:30.000 --> 00:01:31.080
and if you need to list of string,

41
00:01:31.080 --> 00:01:34.470
you can have a StringList, but String here has Data Type.

42
00:01:34.470 --> 00:01:37.560
It's either text or AWS EC2 image

43
00:01:37.560 --> 00:01:41.280
because you can also reference image ARNs here,

44
00:01:41.280 --> 00:01:42.870
and here you just have to specify the

45
00:01:42.870 --> 00:01:44.220
text in a specific format.

46
00:01:44.220 --> 00:01:46.950
But we'll use Text, and for the string, I will have

47
00:01:46.950 --> 00:01:51.217
for example, dev.database.stephantheteacher.com.

48
00:01:54.270 --> 00:01:56.250
This is just an example.

49
00:01:56.250 --> 00:01:58.290
You don't have to put anything that's a URL.

50
00:01:58.290 --> 00:01:59.580
You can put whatever you want in it,

51
00:01:59.580 --> 00:02:03.900
but that's going to be the value of my parameter, this one.

52
00:02:03.900 --> 00:02:06.330
So let's create this parameter,

53
00:02:06.330 --> 00:02:08.340
and as you can see now it's been created.

54
00:02:08.340 --> 00:02:11.100
I can click on it and have a look at it.

55
00:02:11.100 --> 00:02:12.690
So this is Version One of this parameter.

56
00:02:12.690 --> 00:02:14.010
We can view the version history here.

57
00:02:14.010 --> 00:02:17.790
So if I were to change it, then I can of course update it,

58
00:02:17.790 --> 00:02:21.540
but I will have access to my version history, which is nice,

59
00:02:21.540 --> 00:02:23.910
and then we're going to do the same but add more parameters,

60
00:02:23.910 --> 00:02:26.610
so we're going to go under Parameter Store

61
00:02:26.610 --> 00:02:28.830
and I'm going to copy this,

62
00:02:28.830 --> 00:02:31.800
and here I'm going to have it as db-password,

63
00:02:31.800 --> 00:02:33.510
so we're going to create it.

64
00:02:33.510 --> 00:02:35.913
So DB Password for Dev,

65
00:02:36.930 --> 00:02:37.890
and as you guessed it,

66
00:02:37.890 --> 00:02:40.170
we're going to have a SecureString this time,

67
00:02:40.170 --> 00:02:42.510
and because it's a password, we're going to encrypt it

68
00:02:42.510 --> 00:02:44.430
with a KMS key,

69
00:02:44.430 --> 00:02:46.380
so it could belong in my account or another account.

70
00:02:46.380 --> 00:02:47.430
We'll use my account.

71
00:02:47.430 --> 00:02:49.440
You could use the default KMS Key ID

72
00:02:49.440 --> 00:02:51.510
managed by AWS for the SSM service,

73
00:02:51.510 --> 00:02:54.600
which is this one, alias/aws/ssm,

74
00:02:54.600 --> 00:02:57.330
or you can select one that you have created before.

75
00:02:57.330 --> 00:03:01.530
For example, you may have created, for example, KMS,

76
00:03:01.530 --> 00:03:03.990
a key called Tutorial or whatever you want to create it.

77
00:03:03.990 --> 00:03:06.720
You don't have to, and so if you had created it,

78
00:03:06.720 --> 00:03:09.450
then you can use it here and leverage it.

79
00:03:09.450 --> 00:03:10.680
It's really as you want,

80
00:03:10.680 --> 00:03:12.750
but let's choose Tutorial for this example,

81
00:03:12.750 --> 00:03:14.190
it doesn't really matter,

82
00:03:14.190 --> 00:03:15.990
and we need to put a password,

83
00:03:15.990 --> 00:03:18.643
so I'll have it as devpassword,

84
00:03:19.860 --> 00:03:23.520
and now this is going to be automatically encrypted by KMS.

85
00:03:23.520 --> 00:03:25.980
So let's create this parameter.

86
00:03:25.980 --> 00:03:27.990
As you can see now, the type is a SecureString,

87
00:03:27.990 --> 00:03:30.420
and if I click on it, as you can see,

88
00:03:30.420 --> 00:03:33.690
the value is encrypted and hidden,

89
00:03:33.690 --> 00:03:35.490
and if I click on show decrypted value,

90
00:03:35.490 --> 00:03:38.430
it will check that I have the KMS permission to use the key

91
00:03:38.430 --> 00:03:41.430
and then therefore decrypt the value for me,

92
00:03:41.430 --> 00:03:42.690
so that's great.

93
00:03:42.690 --> 00:03:45.150
What we can do now is just really quickly

94
00:03:45.150 --> 00:03:48.210
create the other parameters for Prod.

95
00:03:48.210 --> 00:03:51.360
So instead of here, I have Prod and I'll call it

96
00:03:51.360 --> 00:03:56.360
prod.stephantheteacher.com3306,

97
00:03:58.020 --> 00:03:59.520
and then for the password, same.

98
00:03:59.520 --> 00:04:02.403
I'm going to copy this real quick and have it as prod.

99
00:04:03.360 --> 00:04:06.900
We'll use a SecureString, we'll use the Tutorial one,

100
00:04:06.900 --> 00:04:09.780
and then we'll have it as prodpassword.

101
00:04:09.780 --> 00:04:13.110
Okay, so now we have four parameters

102
00:04:13.110 --> 00:04:14.760
and they're all available within the Parameter Store

103
00:04:14.760 --> 00:04:17.490
and they're ordered by a hierarchy.

104
00:04:17.490 --> 00:04:20.580
So now let's try to access these parameters using the CLI.

105
00:04:20.580 --> 00:04:23.820
So I'm going to open a CloudShell on the top

106
00:04:23.820 --> 00:04:26.160
because it has the CLI installed of AWS

107
00:04:26.160 --> 00:04:27.990
and it's already configured.

108
00:04:27.990 --> 00:04:30.300
And so what we're going to use is a command

109
00:04:30.300 --> 00:04:32.280
called the SSM Get Parameters.

110
00:04:32.280 --> 00:04:37.110
So we'll do aws ssm get-parameters,

111
00:04:37.110 --> 00:04:38.430
and then you have to provide names,

112
00:04:38.430 --> 00:04:41.010
and the names correspond to the names of your parameters.

113
00:04:41.010 --> 00:04:44.400
So I can have, for example, my dev/db-url

114
00:04:44.400 --> 00:04:48.660
as well as my dev password, db-password.

115
00:04:48.660 --> 00:04:53.010
So we'll press Enter, and as you can see, now I get a result

116
00:04:53.010 --> 00:04:55.080
with my two parameters.

117
00:04:55.080 --> 00:04:56.790
So we have this one and that one,

118
00:04:56.790 --> 00:04:59.490
and you can see that for the db-url, it's a String,

119
00:04:59.490 --> 00:05:01.440
the value has been returned as is,

120
00:05:01.440 --> 00:05:03.690
but for the db-password, it's a SecureString

121
00:05:03.690 --> 00:05:06.090
and it has been returned as an encrypted value.

122
00:05:06.090 --> 00:05:09.480
So to decrypt this value, I'll press Enter, Enter, Enter,

123
00:05:09.480 --> 00:05:10.353
and quit, q.

124
00:05:11.220 --> 00:05:13.380
I have to specify a flag,

125
00:05:13.380 --> 00:05:16.890
and the flag is called with-decryption,

126
00:05:16.890 --> 00:05:20.100
and so it's going to check additionally if I have the KMS

127
00:05:20.100 --> 00:05:23.370
security policy allowed on my account

128
00:05:23.370 --> 00:05:24.990
to decrypt that parameter.

129
00:05:24.990 --> 00:05:27.180
So as you can see now, the db-password

130
00:05:27.180 --> 00:05:30.540
is still a SecureString, but now we have devpassword

131
00:05:30.540 --> 00:05:34.140
as a decrypted value thanks to this flag with decryption.

132
00:05:34.140 --> 00:05:35.700
So the CLA is very powerful

133
00:05:35.700 --> 00:05:38.940
and something you can definitely use in your scripts.

134
00:05:38.940 --> 00:05:41.760
Another command I would like to show you

135
00:05:41.760 --> 00:05:44.310
is going to be the Get Parameters by Path.

136
00:05:44.310 --> 00:05:48.640
So you do aws ssm get-parameters-by-path,

137
00:05:53.940 --> 00:05:56.040
and then you have to specify a path,

138
00:05:56.040 --> 00:05:57.750
and the path is whatever you want,

139
00:05:57.750 --> 00:06:01.410
so because we have a hierarchy, we have my-app/dev,

140
00:06:01.410 --> 00:06:04.740
it's going to give me all the parameters in this namespace,

141
00:06:04.740 --> 00:06:07.170
and as you can see, we got again, the dev db-password

142
00:06:07.170 --> 00:06:09.150
and the dev db-url.

143
00:06:09.150 --> 00:06:12.750
But you can do something more now, you can do, for example,

144
00:06:12.750 --> 00:06:15.030
my-app as a whole,

145
00:06:15.030 --> 00:06:16.500
and as you can see, I get nothing,

146
00:06:16.500 --> 00:06:19.080
but if I use the flag

147
00:06:19.080 --> 00:06:21.210
and it's a flag called Recursion,

148
00:06:21.210 --> 00:06:23.943
so it's going to be recursive,

149
00:06:26.010 --> 00:06:28.860
then you have access to all the parameters recursively

150
00:06:28.860 --> 00:06:30.000
under that namespace.

151
00:06:30.000 --> 00:06:34.200
So we have access to the dev as well as the prod

152
00:06:34.200 --> 00:06:36.090
type of parameters, which is brilliant,

153
00:06:36.090 --> 00:06:38.040
so now we have our four parameters.

154
00:06:38.040 --> 00:06:39.900
And finally, if you want it, of course,

155
00:06:39.900 --> 00:06:43.590
you can also use with-decryption to decrypt all of them.

156
00:06:43.590 --> 00:06:44.423
And that's it.

157
00:06:44.423 --> 00:06:45.900
So we've seen how the Parameter Store was working,

158
00:06:45.900 --> 00:06:48.840
we've seen about the hierarchy, we've seen the CLI,

159
00:06:48.840 --> 00:06:50.280
and it starts to show you the power

160
00:06:50.280 --> 00:06:52.170
of using the Parameter Store.

161
00:06:52.170 --> 00:06:53.400
So I hope you liked it,

162
00:06:53.400 --> 00:06:55.350
and I will see you in the next lecture.

